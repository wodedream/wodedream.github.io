<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[This is my firstblog Quick Start新建文章1$ hexo new "My New Post" 运行服务器1$ hexo server 生成静态文件1$ hexo generate 发布到github1$ hexo deploy]]></content>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本操作]]></title>
    <url>%2F2018%2F12%2F24%2FMarkdown%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[目录 一、Markdown简介既然我们用了它，就该对其有一个大概的了解 1.1、认识MarkdownMarkdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML标记语言来说，Markdown可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。它用简洁的语法代替排版，而不像一般我们用的字处理软件Word或Pages有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。 1.2、使用Markdown的好处专注你的文字内容而不是排版样式。轻松的导出 HTML、PDF 和本身的 .md 文件。纯文本内容，兼容所有的文本编辑器与字处理软件。可读，直观。适合所有人的写作语言。 二、Markdown语法规则上面对Markdown有了一个基本的认识，并且对其使用的好处也介绍了几点。那么该怎样编写Markdown文档呢？请继续往下看… 2.1、标题举例说明： 一级标题二级标题三级标题四级标题五级标题六级标题2.2、列表在编写Markdown文档时，列表几乎上都会用到的，而列表可分为无序列表和有序列表两种，他们的语法都很简单 2.2.1、有序列表要使用有序列表，只要在一段文字前加上序号即可。如1. xxx、2. xxx…，这里值得注意的是，序号后面跟上一个英文符号的点（.）,并且(.)后面有一个空格，不然无效。举例说明： 中国 美国 英国2.2.2、无序列表要是用无序列表，只要在一段文字前面加上特定的符号即可。这里的符号可以是(、-、+)。如- xxx、+ xxx、 xxx。同样值得注意的是符号与文字之间有一个空格。举例说明： 中国 + 中国 * 中国 美国 &lt;===&gt; + 美国 &lt;===&gt; * 美国 英国 + 英国 * 英国上面三个符号的效果是一样的，并且可以混用。2.2.3、有序列表和无序列表之间的混用情况在实际编写中，可能会出现列表包含子列表的情况，也可能发生无序与有序列表之间嵌套的情况。这种情况下，只要在子列表的字段前面加上一个Tab键，即4个空格就行了。请看下面的实例。 中国 深圳 上海 美国 纽约 硅谷 英国 英格兰 威尔士上面只演示了，有序列表嵌套无序列表的情况，其他的根据这个格式按照有序和无序列表的语法改动就行了。2.3、引用引用的使用：在一段文本的前面加上英文的右尖括号，即(&gt;)符号。值得注意的是，&gt;符号与文本之间有一个空格。2.3.1、基本使用举例说明： 我是引用文本 2.3.2、嵌套引用嵌套引用在一个引用文本中在引用其他的文本，也可以和列表一起使用举例说明： 我是引用文本1 我是嵌套的引用文本1我是嵌套的引用文本2 在嵌套一层1 在嵌套一层2 我是嵌套的引用文本3 我是引用文本2 2.4、文字的样式在Markdown中，还提供了几种很常见的文字样式，比如：加粗、倾斜、删除线等。 2.4.1、加粗在文本的两端分别加上两个星号（）或者下划线（__）。比如xxx，注意:不能有空格举例说明： 我是加粗的文本1**我是加粗的文本2 2.4.2、斜体在文本的两端分别加上一个星号（）或者一个下划线（_）。比如xxx，注意:不能有空格举例说明： 我是倾斜的文本1*我是倾斜的文本2 2.4.3、删除线在文本的两端分别加上两个波浪号（）。比如xxx，注意:不能有空格举例说明：~~我是要删除的文本 2.4.4、下划线在Markdown的原生语法中是不存在下划线的语法的，因为它会和链接产生冲突。在下面讲到Markdown引用链接时，你就明白了。但是我们可以用html代码达到下划线的效果。 2.4.4.1、解决方案：使用行内Html代码解决,当然，上面的几种文本样式同样可以用Html去完成它。 2.4.4.1.1、使用行内Html代码解决的两种方式使用Html标签中的标签，但是这种方案不推荐，因为Html5的代码规范以及标签的不可定制性。举例说明：我是带有下划线的文本 2.4.4.1.2、使用Html语言中的标签，相信对于前端开发者来说，是再熟悉不过了。推荐用此方式举例说明：下划线为绿色，并且高度为1px，并且下划线为虚线。所添加的需要加下划线的行内文字注意，要实现下划线为实线的话，请把dashed修改为solid上面就是实现下划线的两种方式。 2.4.5、数学公式中的表达方法（很少用到）用Markdown编写文档，用到数学公式的地方很少，我在这里列举常用的两三种，如果你想深入研究它，请参见在Markdown中输入数学公式(MathJax)这边文章，写的很详细我在这里只举例说明数学公式中的上划线与下划线。举例说明：上划线： $\overline{X}$下划线： $\underline{X}$ 2.5、链接与图片在实际的文档编写中，链接的引用于图片的插入都很重要，而且其使用度也很高。而且链接和图片在其语法上也只有一个细微的差别。请看下面的实例 2.5.1、链接链接的使用：英文下的一对中括号[]来包裹住链接的文本，中括号后面跟上英文下的一对小括号()来包裹住链接的地址。比如：百度 2.5.2、图片图片的使用和链接的使用几乎相同，只要在[]前面加上一个英文的感叹号即可，即(!)符号。举例说明： 2.6、表格Markdown中的实现表格是比较麻烦的。这里不多作解释，看下面的例子就知道了。 2.6.1、基本使用举例说明： 列名1 列名2 列名3 值1 值1 值2 值1 值1 值2 值1 值1 值2 2.6.2、表格的对齐方式默认的对齐方式为：左对齐方式。举例说明：以上面的例子举例，第一列左对齐，第二列居中对齐，第三列右对齐。注意和上面例子的不同之处 列名1 列名2 列名3 值1 值1 值2 值1 值1 值2 值1 值1 值2 2.7、关键字、代码块、多行文本、换行在编写文档，特别是技术型文章的时候，关键字和代码框的使用尤其的多。这里对上面提到的4个知识点一一的讲解。 2.7.1、关键字关键字的使用：在文本的两端分别加上英文的()这个符号。即键盘上Tab键的上面哪一个键。注意是英文的情况下。例：xxx、yyy举例说明：关键字1、Java、Android、ios` 2.7.2、代码块代码框的使用：在一段文本的前面加上4个空格，或者一个Tab键的长度。举例说明： 注意看下面的每一行前面都有一个Tab键的额长度，即4个空格123for(int i = 0 ; i &lt; 5; i++)&#123; println(&quot;asdasdasdasd&quot;)&#125; 2.7.3、纯文本纯文本的使用：在一段文本的两端分别加上3个英文的（`）符号，例：12其实在写文章的时候，几乎用不到纯文本，因为在用代码块几乎上可以代替他了。不过还是有特例，就比如说上面的那个例子就用到了纯文本。举例说明： for(int i = 0 ; i &lt; 5; i++){ println(“asdasdasdasd”)}` 2.7.4、换行符换行符的使用这里提供三种方式：使用Html中的标签（不推荐），因为在某一些工具或在线平台中达不到效果段落与段落之间使用一个空行（推荐）在第一段文本结束后使用两个空格，在换行写第二段文本。（推荐） 使用举例说明：第一段文本第二段文本 使用空行举例说明：第一段文本 第二段文本 使用两个空格举例说明： 第一段文本(这里跟了两个空格)第二段文本 2.8、分割线分割线的使用：在段落与段落之间加上3个中划线(-)。举例说明： 4442222]]></content>
      <tags>
        <tag>Markdown基本操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库课程设计（学生成绩管理系统）]]></title>
    <url>%2F2018%2F12%2F24%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%EF%BC%88%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1、基本要求 实现学生基本信息（学号、姓名、性别、出生年月、籍贯、班级、专业），专业信息（专业编号、专业名称、所属学院），课程信息（课程号、课程名、学分）的插入、删除、修改、浏览和查询管理； 实现学生成绩管理（学号、课程编号、成绩）； 建立数据库相关表之间的参照完整性约束； 实现各门课程成绩的自动排序和平均分统计； 创建存储过程，统计指定班级各个学生的成绩总分和平均分； 创建视图，按专业查询各门课程需要补考的学生信息（学号、班级、姓名、成绩），以便安排补考。 2、数据库设计1、需求分析 通过对学生成绩管理系统的日常工作进行详细的调查和分析，确定“学生成绩管理系统”要实现的功能。 通过该系统，可以实现对学生基本信息，专业信息，课程信息的插入、删除、修改、浏览和查询管理； 实现学生成绩的管理（查询，修改），统计各门课程的平均分并排序，统计指定班级各个学生的成绩总分和平均分; 按专业查询各门课程需要补考的学生信息（学号、班级、姓名、成绩） 2、概念设计通过需求分析的结果，本系统所要设计的实体和属性如下： 学生（学号、姓名、性别、出生年月、籍贯、班级、专业） 专业（专业编号、专业名称、所属学院） 课程（课程号、课程名、学分） E-R图为 3、逻辑设计将概念设计的E-R图转换为关系模式，根据需要设计相应视图、存储过程。 1、关系设计根据转换原则转换成5个关系模式，关系的主键用下划线标出。 学生（学号、姓名、性别、出生年月、籍贯、班级、专业） 专业（专业编号、专业名称、所属学院） 课程（课程号、课程名、学分） 选课（学号、课程号、成绩） 共设计4个数据库表 学生表（student） 字段名 数据类型 数据长度 是否为空 条件Key 学号 Varchar 255 N P_K 姓名 Varchar 255 N 年龄 Int 11 N 性别 Varchar 2 N 男或女 籍贯 Varchar 255 N 班级 Varchar 255 N 专业 Int 11 N F_K 专业表（major） 字段名 数据类型 数据长度 是否为空 条件Key 专业编号 Int 11 N P_K 专业名称 Varchar 255 N 所属学院 Varchar 255 N 课程表（course） 字段名 数据类型 数据长度 是否为空 条件Key 课程编号 Int 11 N P_K 课程名称 Varchar 255 N 课程学分 Float 255 N 选课表（select） 字段名 数据类型 数据长度 是否为空 条件Key 学生学号 Varchar 255 N F_K 课程编号 Int 11 N F_K 学生成绩 Float 255 N 2、设计视图视图一统计各门课程的平均成绩其创建视图的代码如下1234567create viewasselect course.CurrId AS 课程编号,course.CurrName AS 课程称,round(avg(grade.Grades),2) AS 平均成绩from (course join grade)where (course.CurrId = grade.CurrId)group by course.CurrId 视图二按专业查询各门课程需要补考的学生信息其创建视图的代码如下1234567891011create viewasselect student.StuId AS 学号,student.StuName AS 姓名,student.Class AS 班级,major.MajName AS 专业名称,grade.Grades AS 成绩,course.CurrName AS 课程名from (((student join grade) join course) join major)where ((student.StuId = grade.StuId) and (grade.CurrId = course.CurrId)and (student.MajId = major.MajId) and (grade.Grades &lt; 60)) 3、设计存储过程统计指定班级各个学生的成绩总分和平均分代码如下12345678910BEGIN #Routine body goes here... SELECT student.StuId AS 学号, student.StuName AS 姓名, student.Class AS 班级, SUM(grade.Grades) AS 总成绩, AVG(grade.Grades) AS 平均成绩 FROM student,grade WHERE student.StuId=grade.StuId AND student.Class=class GROUP BY student.StuId;END 3、数据库功能实现1、创建数据库表1、学生表 2、专业表 3、课程表 4、选课表 2、功能实现1、学生基本信息查询功能（视图实现）。 2、查询某个班级的学生成绩（视图实现）。 3、学生信息的录入（存储过程实现）。 4、实现各门课程成绩的自动排序和平均分统计（视图实现）。 5、统计指定班级各个学生的成绩总分和平均分（存储过程实现）。 6、按专业查询各门课程需要补考的学生信息（存储过程实现）。 4、总结和分析本次课程设计主要以数据库mysql为载体，通设计数据库表，根据需要实现的功能写出相应的查询语句、创建时视图、创建存储过程。小组内统筹协调，分工合]]></content>
      <categories>
        <category>学习资料</category>
      </categories>
      <tags>
        <tag>数据库原理</tag>
        <tag>课程设计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给Hexo博客添加访问统计]]></title>
    <url>%2F2018%2F12%2F24%2F%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E7%BB%9F%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[hexo添加访问量统计功能可以用百度的站长统计、leancloud，还有不蒜子，这里我用的不蒜子，感觉挺简单的。 引入不蒜子1&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; 这段代码可以写在footer.ejs里或者header.ejs里或者layout.ejs里，我用的yilia主题，放在/themes/yilia/layout/_partial/footer.ejs 添加站点访问量通常站点的总访问量会显示在footer的位置，所以我们可以在footer.ejs里加上如下标签：123&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次&lt;/span&gt; 计算访问量的方法有两种：算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。我用的是uv的方式，大家自行选择即可。 添加文章访问量文章的访问量显示在文章里面，所以在article.ejs里加上文章访问量的标签：123&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt; 本文总阅读量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; 我们直接就这样放在yilia主题中，首页也会显示该网页的访问量，没法正常使用，所以我加一个判断，如果是首页不显示该文章的访问量，下面这段代码添加在/themes/yilia/layout/_partial/article.ejs的header的日期后面：12345&lt;% if ( !index )&#123; %&gt; &lt;span class=&quot;archive-article-date&quot;&gt; 阅读量 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; &lt;/span&gt;&lt;% &#125; %&gt;]]></content>
      <categories>
        <category>hexo加GitHub搭建个人博客</category>
      </categories>
      <tags>
        <tag>添加访问量</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库原理课程设计方案]]></title>
    <url>%2F2018%2F12%2F24%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[一、设计的目的课程设计是学生对课程所学知识的综合运用，它与课堂听讲、上机实验、课外练习、自学研究相辅相成，构成一个完整的课程教学体系。《数据库原理》课程设计是计算机科学与技术课程体系中专业实践教学的重要环节之一，是学完《数据库原理》课程后进行的一次全面综合实践，其目的在于加深学生对数据库基本概念、基本原理，以及关系数据库设计理论的理解，通过课程设计的综合训练，培养学生动手解决数据库分析、设计和应用等实际问题的能力，掌握关系数据库系统建设的流程，掌握E-R图的绘制方法以及关系数据库设计方法、数据库规范化处理的技能，并通过业务SQL描述深入掌握SQL的使用方法。 二、参与人员与组织方式按照专业教学计划安排，本课程设计要求2016级计算机科学与技术专业所有学生都必须参与。为提高课程设计的质量，取得更好的教学效果，本次课程设计采用集中指导，分组管理，独立完成的实施方式。课程设计时间安排在本学期第17周在实验室集中进行。课程设计期间，每天配备2名专业教师进行集中指导（具体指导安排见分组表）。课程设计的最后一天时间为学生课程设计成果验收、成绩评定及设计答辩阶段，随机抽取40%左右小组同学参加答辩。 三、设计安排课程设计内容安排表 内容 学时 时间 动员学生，布置任务。学生资料查阅，回顾和复习关系数据库设计的基本理论知识和重要方法。 8 2018年12月24日 运用关系数据库设计方法进行数据库需求分析、概念结构、逻辑结构及物理结构设计。 8 2018年12月25日 数据库的具体实施；数据库管理系统的编码实现及测试；按模板要求撰写及打印《数据库原理课程设计报告》。 16 2018年12月26日，2018年12月27日 成果验收，成绩说不定，优秀作品答辩。 8 2018年12月28日 四、课程设计报告要求每组提交一份打印版的《课程设计报告》文档。文档必须规范整齐，在内容和排版格式两方面者符合要求。《课程设计报告》内容按以下五点撰写（可参考附录课程设计报告模板）：1．问题描述：问题的具体描述，选题的背景及意义。2．需求分析：系统的数据需求和功能需求描述，数据流图及数据字典。3．数据库设计： E-R模型、关系模式的描述，关系模式的设计（关系模式至少要满足第三范式），数据库的设计要考虑安全性和完整性的要求。4．具体的解决实例。5．课程设计总结。课程设计报告排版格式要求如下：1．字体字号：一级标题黑体小三，二级标题黑体四号，正文宋体小四。2．行间距：全文固定值22磅。3．页边距：上、下、左、右页边距均为2.5厘米。4．单面A4纸打印。 五、成绩评定考核要求：根据学生完成任务的情况、课程设计报告质量和课程设计过程中的工作态度以及出勤综合评分。课程设计成绩按优秀、良好、中等、及格和不及格五个等级，由指导教师根据学生的设计期间的表现综合评定，并附有指导教师评语。 六、指导说明1．辅导学生按下列步骤完成各题目的设计并写出课程设计报告，在对所选题目进行调研的基础上，明确该选题要做什么。2．指导学生完成以下工作：建立系统数据流图和数据字典，设计数据库的概念结构（E-R图）和逻辑结构（注明主码和外码的关系模式），设计并建立数据库中的数据表、视图（如果使用），实现触发器、存储过程（如果使用）的定义（可以用SQL脚本提供）和使用，。3．对学生设计文档及课程设计完成情况（包括设计结果的合理性、规范程度和实际运行结果）进行评价和总结。 七、课程设计选题课程设计题目以选用学生相对比较熟悉的业务模型为宜，要求通过本实践性教学环节，能较好地巩固数据库的基本概念、基本原理、关系数据库的设计理论、设计方法等知识，针对实际问题设计概念模型，并完成小型数据库应用系统的设计与实现。 1．选题范围基础理论问题，数据库的基本概念、基本原理、关系数据库的设计理论、设计方法等，数据库的设计与实现，数据建模工具与数据库管理系统软件的应用。 2.选题要求选题要求针对能覆盖多个知识点，使用现有工具能够解决的问题，难易适中，具有典型意义。 3.参考选题及设计要求（1）电费收缴管理系统基本要求：实现客户（客户编号、姓名、性别、联系电话、住址），用电类型（类别号、类别名、电价）及业务员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现客户用电管理（客户号、月份、用电类别号、用电度数）；实现客户费用管理（客户号、月份、费用、收费标志），收费标志的默认值置为未收；实现收费登记（客户、月份、应收费用、实收费用、业务员）；建立数据库相关表之间的参照完整性约束；创建触发器，实现收费时自动更新应收费用和实收费用，计算本次结余，然后修改客户信息表中的结余金额； 创建存储过程，统计指定月份应收费用和实收费用； 创建视图，查询指定月份未交费的用户信息，以便崔费。 （2）食品库存管理系统基本要求：实现食品信息（食品编号、名称、类别号、单价、库存数、保质期），管理员信息（工号、姓名、联系电话）和食品类别信息（类别号、类别名称、是否易变质食品）的插入、删除、修改、浏览和查询管理；实现食品的出库管理（出库单号、食品名称、出库数量、出库时间、管理员工号）；实现食品的入库管理（入库单号、食品名称、入库数量、入库时间、管理员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，实现已过保质期食品的自动毁除登记管理；创建视图，查询不同类别食品的编号、名称、总数和库存量；创建存储过程，查询库存数少于指定数目的在库食品信息，以便进货。 （3）房租收缴管理系统基本要求：实现租客信息（租客编号、姓名、性别、身份、身份证号码、联系电话），房屋类型（类别号、类别名、租金）及业务员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现租客租房管理（租客编号、月份、所租房屋类别、租用月数）；实现房租管理（租客编号、月份、费用、收费标志），收费标志的默认值置为未收；实现缴费登记（租客编号、月份、应收费用、实收费用、业务员）；建立数据库相关表之间的参照完整性约束；创建触发器，实现收费时应收费用和实收费用的自动更新，计算本次结余，然后修改客户信息表中的结余金额； 创建存储过程，统计指定月份应收费用和实收费用；创建视图，查询指定月份未交费的用户信息，以便崔费。 （4）学生成绩管理系统基本要求：实现学生基本信息（学号、姓名、性别、出生年月、籍贯、班级、专业），专业信息（专业编号、专业名称、所属学院），课程信息（课程号、课程名、学分）的插入、删除、修改、浏览和查询管理；实现学生成绩管理（学号、课程编号、成绩）；建立数据库相关表之间的参照完整性约束；实现各门课程成绩的自动排序和平均分统计；创建存储过程，统计指定班级各个学生的成绩总分和平均分；创建视图，按专业查询各门课程需要补考的学生信息（学号、班级、姓名、成绩），以便安排补考。 （5）图书借阅系统基本要求：实现图书信息（编号、名称、类别、价格、出版社）和读者信息（借书证编号、姓名、性别）的插入、删除、修改、浏览和查询管理；实现图书的借阅管理（借书证编号、姓名、图书名称、借阅时间、应还时间）和归还管理（借书证编号、姓名、图书名称、借阅时间、应还时间、归还时间）；实现超期罚款管理（借书证编号、姓名、应交罚款）；建立数据库相关表之间的参照完整性约束；创建触发器，分别实现借书和还书时自动更新图书的在册数量；创建视图，查询各种图书的书号、书名、总数和在册数；创建存储过程，查询指定读者借阅图书的情况。 （6）物业费收缴管理系统基本要求：实现业主信息（业主编号、姓名、性别、联系电话），房屋类型（类别号、类别名、每平方米租金）及业务员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现业主物业费管理（业主编号、房屋类别号、房屋面积、月份、应缴费用、收费标志），收费标志的默认值置为未收；实现缴费登记（业主编号、月份、应缴费用、实缴费用、业务员）；建立数据库相关表之间的参照完整性约束；创建触发器，实现收费时自动更新应收费用和实收费用，计算本次结余，然后修改客户信息表中的结余金额； 创建存储过程，统计指定月份应收费用和实收费用；创建视图，查询指定月份未交费的用户信息，以便崔费。 （7）银行账户管理系统基本要求：实现客户账户信息（账号、姓名、余额、身份证号码、单位、联系电话、地址），存款类型（类别号、类别名）及业务员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现客户存款管理（存款业务编号、存款账号、存款类别号、金额、时间、业务员工号）；实现客户取款管理（取款业务编号、取款账号、取款类别号、金额、取款时间、业务员工号）；实现客户转帐管理（转帐业务编号、转入账号、转出帐号、转帐金额、转帐时间、业务员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，分别实现存款、取款、转账时自动更新应客户的账户余额；创建触发器，分别实现取款、转账时账户余额不足的操作失败管理；创建存储过程，统计账户余额高于指定数额的帐户信息；创建视图，查询不同类型存款的客户信息。 （8）服饰销售统计系统基本要求：实现服饰信息（编号、名称、类别、供应商、价格、可售数量），服饰类型（类别号、类别名）和销售员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现服饰销售管理（销售单号、服饰名称、销售数量、总金额、时间、销售员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，实现某种服饰售出时可售数量的自动更新；创建视图，按类别查询可销售的服饰信息，以及无货可销的服饰信息；创建存储过程，统计不同销售员的售货数量及售货金额，以及某一时间段内不同类别服饰的销售数量。 （9）房屋租赁管理系统基本要求：实现房主信息（房主编号、姓名、性别、住址、联系电话），租赁者信息（姓名、身份证编号、性别、住址、联系电话），房屋信息（房号、地址、房型、最多能容纳的房客数、租金及房屋状态（待租赁、已出租））和房型信息（房型编号、户型、面积），业务员信息（工号、姓名、联系电话）的登记、删除、修改、浏览和查询管理；建立数据库相关表之间的参照完整性约束；实现房屋的租赁管理（房号、租赁者姓名、是否已付押金，业务员工号）。创建触发器，实现租赁者租房已付押金时房屋状态自动变更；创建视图，按类型查询可租赁的房屋信息；创建存储过程，查询并统计不同类型房屋的租赁情况。 （10）水费收缴管理系统基本要求：实现客户（客户编号、姓名、性别、联系电话、住址），用水类型（类别号、类别名、水价）及业务员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现客户用水管理（客户号、月份、用水类别号、用水度数）；实现客户费用管理（客户号、月份、费用、收费标志），收费标志的默认值置为未收；实现收费登记（客户、月份、应收费用、实收费用、业务员工号），并自动修改收费标志（用触发器实现）；建立数据库相关表之间的参照完整性约束；创建触发器，实现收费时自动更新应收费用和实收费用，计算本次结余，然后修改客户信息表中的结余金额； 创建存储过程，统计指定月份应收费用和实收费用； 创建视图，查询指定月份未交费的用户信息，以便崔费。 （11）服饰库存管理系统基本要求：实现服饰信息（服饰编号、名称、类别号、单价、库存数），管理员信息（工号、姓名、联系电话）和服饰类别信息（类别号、类别名称、是否破损）的插入、删除、修改、浏览和查询管理；实现服饰的出库管理（出库单号、服饰名称、出库数量、出库时间、管理员工号）；实现入库管理（入库单号、服饰名称、入库数量、入库时间、管理员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，实现已破损服饰的自动毁除登记管理；创建视图，按类别查询不同服饰的编号、名称、总数和库存量；创建存储过程，查询库存数少于指定数目的在库服饰信息，以便进货。 （12）车辆租赁系统基本要求：实现车主信息（车主编号、姓名、性别、住址、联系电话），租赁者信息（姓名、身份证编号、性别、住址、联系电话），车辆信息（车号、车型、车价、车辆状态（待租赁、已出租））和车型信息（车型编号、车型名称、租金），业务员信息（工号、姓名、联系电话）的登记、删除、修改、浏览和查询管理；建立数据库相关表之间的参照完整性约束；实现车辆的租赁管理（车号、租赁者姓名、是否已付押金，业务员工号）。创建触发器，实现租赁者租车已付押金时车辆状态自动变更；创建视图，按车型查询可租赁的车辆信息；创建存储过程，查询并统计不同类型车辆的租赁情况。 （13）鲜花库存管理系统基本要求：实现鲜花信息（鲜花编号、名称、类别号、单价、库存数），管理员信息（工号、姓名、联系电话）和鲜花类别信息（类别号、类别名称、是否残破）的插入、删除、修改、浏览和查询管理；实现鲜花的出库管理（出库单号、鲜花名称、出库数量、出库时间、管理员工号）；实现鲜花的入库管理（入库单号、鲜花名称、入库数量、入库时间、管理员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，实现已破损鲜花的自动毁除登记管理；创建视图，按类别查询不同鲜花的编号、名称、总数和库存量；创建存储过程，查询库存数少于指定数目的在库鲜花信息，以便进货。 （14）图书销售统计系统基本要求：实现图书信息（编号、名称、类别、出版社、价格、可售册数），图书类型（类别号、类别名）和销售员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现图书销售管理（销售单号、图书编号、图书名称、销售册数、总金额、时间、销售员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，实现图书售出时图书可售册数的自动更新；创建视图，按类别查询可销售的图书信息，以及无货可销的图书信息；创建存储过程，统计不同销售员的售书册数及售书金额，以及某一时间段内不同类别图书的销售册数。 （15）高中毕业生录取信息管理系统基本要求：实现学生基本信息（学号、姓名、性别、出生年月、班级、籍贯、高考成绩），录取院校信息（院校编号、院校名称、院校地址）的插入、删除、修改、浏览和查询管理；实现学生录取信息管理（学号、姓名、录取院校编号、录取院校名称、录取批次）；建立数据库相关表之间的参照完整性约束；创建存储过程，统计各班级不同批次录取的人数；创建视图，查询被不同批次院校录取的学生信息（学号、姓名、性别、班级、录取院校、高考成绩）。 （16）食品销售统计系统基本要求：实现食品信息（编号、名称、类别、供应商、价格、可售数量），食品类型（类别号、类别名）和销售员信息（工号、姓名、联系电话）的插入、删除、修改、浏览和查询管理；实现食品销售管理（销售单号、食品编号、食品名称、销售数量、总金额、时间、销售员工号）；建立数据库相关表之间的参照完整性约束；创建触发器，实现食品售出时食品可售数量的自动更新；创建视图，按类别查询可销售的食品信息，以及无货可销的食品信息；创建存储过程，统计不同销售员的售货数量及售货金额，以及某一时间段内不同类别食品的销售数量。 本文总阅读量次]]></content>
      <categories>
        <category>学习资料</category>
      </categories>
      <tags>
        <tag>数据库原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的测试]]></title>
    <url>%2F2018%2F12%2F23%2F%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[操作系统复习资料]]></title>
    <url>%2F2018%2F12%2F23%2F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99%2F</url>
    <content type="text"><![CDATA[第一章 绪论 1、什么是操作系统？操作系统是一种系统软件，是软硬资源的控制中心，它以尽量合理有效的方法组织单个或多个用户以多任务方式共享计算机的各种资源。 2、针对不同资源特点，资源管理分为两种方法：“时分”和“空分” 时分就是由多个用户进程分时地使用该资源，如外设控制器、网卡等。 空分是针对存储资源而言的，存储资源的控件可以被多个用户进程共同以分割的方式占用。 3、在时分共享使用的资源当中，有如下两种不同方式： 独占式使用。 分时式共享使用。 3、专用操作系统 多道批处理系统。 分时系统。 实时系统。 4、操作系统的最本质特征？ 并发机制，用以支持多道程序技术。 共享机制，控制各种并发活动正确共享系统软、硬资源。 第二章 操作系统运行机制和用户界面1、终端和异常 中断，也称外中断。指来自CPU执行指令以外的事件发生，如设备发出的各种I/O结束中断，表示设备I/O吃力已完成。 异常，也称内中断、例外或陷入，指源自CPU执行指令内部的事件，如程序的非法操作码、地址越界、算术溢出等。 2、断点和恢复点当中断发生时，CPU刚执行完的那条指令地址称为“断点”。中断时，程序计数器所指的地址（即短点的逻辑后续指令）称为恢复点。]]></content>
      <categories>
        <category>学习资料</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows下通过GitHub+Hexo搭建个人博客的步骤]]></title>
    <url>%2F2018%2F12%2F23%2FWindows%E4%B8%8B%E9%80%9A%E8%BF%87GitHub%2BHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%AD%A5%E9%AA%A4%2F</url>
    <content type="text"><![CDATA[1. 注册GitHub账号 2. 安装Git3. 创建个人博客3.1 什么是GitHub Pages Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点被免费托管在GitHub上，可以使用Github Pages默认提供的域名github.io 或者自定义域名（域名需要买买买）来发布站点。 3.2 创建GitHub Pages3.2.1 在自己的GitHub上创建一个repository1.New repository 2.Repository name 必须是 GitHub用户名.github.io 如上截图，点击下方的Create repository按钮即可完成创建 3.2.2 Git clone 创建的repository到本地首先创建SSH key在自己的电脑上选择一个合适的位置或创建一个文件夹，用来存放本地的repository。打开上述在GitHub上创建的repository，Clone or download → Clone with SSH 复制SSH地址 在本地repository的文件夹下，鼠标右键点击空白处，选择git bash，通过git clone 复制的SSH地址复制到本地。 3.2.3 在repository根目录下写一个简单的HTML文件例如： 3.2.4 将repository的改动推送给GitHub上的repository在本地repository目录下，依次进行以下三个操作： git add .git commit -mgit push 3.2.5 访问地址https://GitHub用户名.github.io,就能读取到最基本的个人网页4. 安装Node.js5. 安装Hexo6. 本地搭建博客在电脑上找个合适位置或者新建文件夹，用来存放之后创建的博客。在博客文件夹下，打开git bash 6.1 初始化博客框架：hexo init会自动生成如下文件： 6.2 生成静态文件hexo generate/hexo g 6.3 启动服务器，本地预览博客效果hexo server/hexo s 7. 发布文章hexo new [layout] &lt;title&gt; 可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。根据不同的布局，会在不同的路径下生成title.md文件 布局 路径 post source/_posts page source draft source/_drafts 生成的文件如下： title是文章的标题，tags是标签，还可以添加categories分类，对发表的博文进行归纳整理。—分割线之后的部分就是文章的内容。可用Markdown语法自由编辑。 8. 将网站部署到个人的GitHub Pages上8.1 安装hexo-deployer-gitnpm install hexo-deployer-git --save 8.2 修改_config.yml文档中deploy的配置按照如下格式（yml文件的格式，属性后紧跟:，空一格再写属性值） 1234type: git # git方式部署repo: &lt;repository url&gt; # repository地址，即 GitHub用户名.github.io库 的SSH地址branch: [branch] # 分支名称，master即可message: [message] # 自定义提交信息 (默认为提交的时间) 修改为 8.3 hexo deploy或hexo d完成部署 将本地的静态网页部署到服务器上，即可通过https://GitHub用户名.github.io访问部署出来的页面。 本文摘自Hunter1023的博客，感谢！！！]]></content>
      <categories>
        <category>hexo加GitHub搭建个人博客</category>
      </categories>
      <tags>
        <tag>搭建个人博客的步骤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机系统结构复习资料]]></title>
    <url>%2F2018%2F12%2F22%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99%2F</url>
    <content type="text"><![CDATA[考试题型：填空题（30’）、判断题（10’）、名词解释（20’）、简答题（20’）、计算题（20’） 第一章 计算机系统结构的基础知识1、计算机系统的层次结构第六级 应用语言机器第五级 高级语言机器第四级 汇编语言机器第三级 操作系统机器第二级 传统机器语言机器第一级 微程序机器 2、计算机系统结构的定义(1）计算机系统结构是指传统机器程序员所看到的计算机属性，即概念性结构和功能特性。（狭义）(2）指令系统结构、组成、硬件。（广义） 3.Amdahl定律当一个系统中某个部件进行改进后，所能获得的整个系统性能的提高，受限于该部件的执行时间占总执行时间的百分比。 4、CPU性能公式CPU时间 = 执行程序所需的时钟周期数时钟周期时间CPI（平均始终周期数）= 执行程序所需的时钟周期数/所执行的指令条数CPU时间 = ICCPI*时钟周期时间 IC:执行指令条数P9 例题1.3 P28-P29 1.7、1.10 CPU相关性能计算（计算题） 5、冯诺依曼机的五部分运算器、控制器、存储器、输入设备和输出设备。 6、并行性的概念并行性是指计算机系统在同一时刻或同一时间间隔内进行多种运算或操作。包含两种含义：（1）同时性，两个或两个以上的事件在同一时刻发生。（2）并发性，两个或两个以上时间在同一时间间隔内发生。 7、提高并行性的技术途径时间重叠、资源重复、资源共享。 8、三种不同的多处理机同构型多处理机、异构型多处理机和分布式系统。 9、时间重叠在并行性概念中引入时间因素，让多个并行处理过程在时间上相互错开，轮流重叠使用同一套硬件设备的各个部分，以加快硬件周转而赢得速度。典型例子：流水线技术 10、资源重复在并行性概念中引入空间因素，以数量取胜。通过重复设置硬件资源，大幅度提高计算机系统的性能。 11、资源共享这是一种软件方法，它使多个任务按一定的时间顺序轮流使用同一套硬件设备。 12、耦合度用来反映多级系统中各计算机之间物理连接的紧密程度和交互作用能力的强弱。 第二章 指令系统的设计1、指令系统结构的分类堆栈型结构、累加器型结构、通用寄存器型结构通用寄存器型结构进一步分成三种类型：寄存器-寄存器型、寄存器-存储器型、存储器-存储器型。 2、寻址方式定义：寻址方式是指指令系统中如何形成所要访问的数据地址。寄存器寻址 ADD R1，R2立即数寻址 ADD R3，#6偏移寻址 ADD R3，120（R2）寄存器间接寻址 ADD R4，（R2） 3、RISC结构和CISCRISC：精简指令集计算机CISC：复杂指令集计算机 4、MIPS指令系统结构32个64位的通用寄存器，寻址方式只有立即数寻址和偏移量寻址两种。 5、MIPS指令格式（1）I类指令： load指令、store指令、立即数指令、分支指令、寄存器跳转、寄存器跳转并链接（2）R类指令： ALU指令、专用寄存器读/写指令、move指令（3）J类指令： 跳转指令、跳转并链接指令、自陷指令、异常返回指令 6、指令举例LD R2，20（R3） 装入双字LW R2，20（R3） 装入字SD R2，20（R3） 保存双字SW R2，20（R3） 保存字DADDU R1，R2，R3 无符号加 Regs[R1]&lt;–Regs[R2]+Regs[R3]DADDU R1，R2，#6 加无符号立即数 Regs[R1]&lt;–Regs[R2]+6J name 跳转JAL name 跳转并链接BEQZ R4，name 等于零时分支 7、常见的三种通用寄存器型机器的优缺点各有哪些？ 类型 优点 缺点 寄存器-寄存器型 简单，指令字长固定，是一种简单的代码生成模型，各种指令的执行时钟周期数相近。 和指令中含有对存储器操作数访问的结构相比,指令条数多，因而其目标代码较大。 寄存器-存储器型 可以直接对存储器操作数进行访问，容易对指令进行编码，且其目标代码较小。 指令中的操作数类型不同。在一条指令中同时对一个寄存器操作数和存诸器操作数进行编码,将限制指令所能够表示的寄存器个数。由于指令的操作数可以存储在不同类型的存储器单元，所以每条指令的执行时钟周期数也不尽相同。 存储器-存储器型 是一种最紧密的编码方式，无需“浪费”寄存器保存变量。 指令字长多种多样。每条指令的执行时钟周期数也大不.样，对存储器的频繁访问将导致存储器访问瓶颈问题。 第三章 流水线技术1、 流水线技术的分类（1）按照用于计算机系统的等级不同，分为：部件级流水线、处理机级流水线和系统级流水线。（2）按照完成的功能分：单功能流水线、多功能流水线。（3）动态流水线、静态流水线。（4）按照流水线中是否存在反馈回路，分为：线性流水线、非线性流水线。 2、流水线性能分析（P63 例3.2 P91 3.6、3.8）（1）绘制时空图（2）计算吞吐率、加速比、流水线效率。 3、单功能非线性流水线的最优调度（1）根据预约表写出禁止表F（2）根据禁止表F写出初始冲突向量C0（3）根据初始冲突向量C0画出状态转换图 4、流水线技术的五个周期及个周期完成的工作（1）取指令周期（IF），以程序计数器（PC）中的内容作为地址，从存储器中取出指令并放入指令寄存器（IR）；同时PC+4，指向顺序的下一条指令。（2）指令译码/读寄存器周期（ID），对指令进行译码，并用IR中的寄存器地址去访问通用寄存器组，读出所需的操作数。（3）执行/有效地址计算周期（EX），ALU对在上一个周期准备好的操作数进行运算或处理。（4）存储器访问/分支完成周期（MEM），load和store指令、分支指令。（5）写回周期（WB），把结果写入通用寄存器组。在上述5个周期的实现方案中，分支指令和store指令需要四个周期，其他指令需要5个周期才能完成。 5、流水线技术将一个重复的时序过程，分解成为若干个子过程，而每一个子过程都可有效地在其专用功能段上与其它子过程同时执行。 6、定向技术用来解决写后读冲突的。在发生写后读相关的情况下，在计算结果尚未出来之前，后面等待使用该结果的指令并不见得是马上就要用该结果。如果能够将该计算结果从其产生的地方直接送到其它指令需要它的地方，那么就可以避免停顿。 7、多功能流水线指各段可以进行不同的连接，以实现不同的功能的流水线。 8、静态流水线指在同一时间内，多功能流水线中的各段只能按同一种功能的连接方式工作的流水线。当流水线要切换到另- -种功能时，必须等前面的任务都流出流水线之后，才能改变连接。 9、动态流水线指在同一时间内，多功能流水线中的各段可以按照不同的方式连接，同时执行多种功能的流水线。它允许在某些段正在实现某种运算时，另一些段却在实现另一种运算。 第四章 向量处理机1、向量向量是计算机系统中经常使用的一种数据类型，向量由一组有序、具有相同类型和位数的元素组成。 2、向量的处理方式横向处理方式、纵向处理方式、纵横处理方式。 3、分段开采技术当向量的长度大于向量寄存器的长度时，必须把长向量分成长度固定的段，然后循环分段处理，每一次循环只处理一个向量段。 4、向量流水线链接第七章 存储系统1、直接映像是指主存中的每一块只能被放置到Cache中唯一的一个位置。 2、组相连映像在组相连映像中，Cache被等分为若干组，每组由若干组构成。主存中的每一块可以被放置到Cache中唯一的一个组的任何一个位置。 3、尽早重启动在请求字没有到达时,CPU处于等待状态。一旦请求字到达,就立即发送给CPU,让等待的CPU尽早重启动,继续执行。 4、请求字优先调块时,首先向存储器请求CPU所要的请求字。请求字一旦到达,就立刻送往CPU,让CPU继续执行,同时从存储器调入该块的其余部分。请求字优先也称为回绕读取或关键字优先。]]></content>
      <categories>
        <category>学习资料</category>
      </categories>
      <tags>
        <tag>计算机系统结构</tag>
      </tags>
  </entry>
</search>
